/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define QWERTY 0
#define SYM    1
#define SYM_2  2
#define FNC    3
#define FNC_2  4

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;

    tapping-term-ms = <280>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        panic {
            bindings = <&to 0>;
            key-positions = <0 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /*
  
 | Q | W | E | R | T |       | Y | U | I | O | P |
 | A | S | D | F | G |       | H | J | K | L | ;: |
 | Z | X | C | V | B |       | N | M | ,< | .> | /? |
          | FUN | SHIFT | | SPACE | SYMBOL |
  */

        colemak_base {
            bindings = <
&kp Q           &kp W           &kp F        &kp R             &kp B        &kp J      &kp L              &kp U        &kp Y            &kp COLON
&mt LEFT_GUI A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G        &kp M      &mt RIGHT_SHIFT N  &mt RCTRL E  &mt RIGHT_ALT I  &mt RIGHT_GUI O
&kp Z           &kp X           &kp C        &kp D             &kp B        &kp SLASH  &kp K              &kp H        &kp COMMA        &kp PERIOD
                                             &kp SPACE         &kp MINUS    &lt 2 TAB  &lt 1 RET
            >;
        };

        /*
  
 | 1 | 2 | 3 | 4 | 5 |       | 6 | 7 | 8 | 9 | 0 |
 | # | _ | ( | [ | { |       | = | ? | ' | + | * |
 | $ | & | ) | ] | } |       | @ | ! | " | - | / |
             |   | CMD |    |   |   |
  */

        sym_layer {
            bindings = <
&kp HASH            &kp PERCENT         &kp LESS_THAN         &kp GREATER_THAN       &kp TILDE           &kp MINUS  &kp LEFT_BRACE                    &kp RIGHT_BRACE              &kp GRAVE                   &kp COLON
&mt LEFT_GUI CARET  &mt LEFT_ALT EQUAL  &mt LCTRL UNDERSCORE  &mt LEFT_SHIFT DOLLAR  &kp ASTERISK        &kp PLUS   &mt RIGHT_SHIFT LEFT_PARENTHESIS  &mt RCTRL RIGHT_PARENTHESIS  &mt RIGHT_ALT LEFT_BRACKET  &mt RIGHT_GUI RIGHT_BRACKET
&kp BACKSLASH       &kp PIPE            &kp EXCLAMATION       &trans                 &kp SINGLE_QUOTE    &kp DQT    &kp EXCL                          &kp DQT                      &kp MINUS                   &kp SLASH
                                                              &none                  &trans              &none      &none
            >;
        };

        /*
  
 | ` | \ | % |   |   |       |   |   |   |   |   |
 | ~ | | | ^ |   |   |       |   |   |   |   |   |
 |   |   |   |   |   |       |   |   |   |   |   |
             |   |   |       |   |   |
  */

        numpad_bt {
            bindings = <
&kp STAR   &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp MINUS       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS        &none         &none         &none         &none         &bt BT_CLR
&kp RET    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0    &none         &none         &none         &none         &none
                                       &none         &none           &none         &none
            >;
        };

        /*
  
 | ESC |   |   |   |   |           |   |   |   |   |   |
 | TAB |   |   |   |   |           | h | j | k | l |   |
 | CAP |   |   |   |   |           |   |   |   |   |   |
      |   |   |           | BSPC | ENTER |
  */
        // &kp LCMD(LS(NUMBER_3))  &kp LCMD(LS(NUMBER_4))  &kp LCMD(LS(NUMBER_5))
        /*
  
 | F1 | F2 | F3 | F4 | F5 |           | F6 | F7 | F8 | F9 | F10 |
 |   |   |   |   |   |           |   |   |   |   |   |
 | F11 | F12 |   |   |   |           |   |   |   |   |   |
             |   |   |           |   |   |
  */

        fnc_2_layer {
            bindings = <
&kp F1         &kp F2         &kp F3         &kp F4         &kp F5           &kp F6             &kp F7             &kp F8             &kp F9             &kp F10
&kp LA(LS(A))  &kp LA(LS(S))  &kp LA(LS(D))  &kp LA(LS(F))  &kp LA(LS(I))    &kp LA(LS(H))      &kp LA(LS(J))      &kp LA(LS(K))      &kp LA(LS(L))      &kp F11
&none          &none          &none          &none          &none            &kp LA(LS(LC(H)))  &kp LA(LS(LC(J)))  &kp LA(LS(LC(K)))  &kp LA(LS(LC(L)))  &kp F12
                                             &none          &none            &none              &none
            >;
        };
    };
};
